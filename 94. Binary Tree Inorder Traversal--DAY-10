/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List <Integer> result = new ArrayList<>();
        if(root==null)
            return result;
        Stack<TreeNode> stack = new Stack<>();
        TreeNode p = root;
        while(p!=null)
        {
            stack.push(p);
            p=p.left;
        }
        
        while(!stack.isEmpty())
        {
            TreeNode node = stack.pop();
            result.add(node.val);
            node = node.right;
            while(node!=null)
            {
                stack.push(node);
                node = node.left;
            }
        }
        return result;
    }
}
